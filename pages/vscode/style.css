@import url('https://fonts.googleapis.com/css2?family=Sora:wght@600&display=swap');

body {
    margin: 0;
    font-family: 'Source Code Pro', monospace;
    background-color: var(--bg-color);
    color: #ffffff;
    cursor: url('./media/cursor.png'), auto;
}


:root {
    --blue: #087ACA;
    --bg-color: hsl(221, 51%, 16%);
    --typewriterSpeed: 4s;
    --typewriterCharacters: 37;
    --delay: 0.69s;
    --cardspeed: 0.7s;
}


.intro {
    width: 100%;
}

.introImageWrapper {
    display: grid;

    width: 100%;
    height: 0;

    animation: unwrapIntro 0.9s linear forwards;
    animation-delay: 5.5s;
}

.introTitle,
.introImageWrapper {
    display: grid;
    place-items: center;
}

.introImage {
    background-image: url(./media/code.png);
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;

    height: 100%;
    width: 100%;
    margin: 0px 50px 0px 50px;
}

@keyframes unwrapIntro {
    0% {
        height: 0vh;
        opacity: 0;
    }

    50% {
        opacity: 0.3;
    }

    70% {
        opacity: 0.5;
    }

    100% {
        height: 50vh;
        opacity: 1;
    }
}

.introInfo,
.introInfo1 {
    animation: unwrapDetails 0.6s linear forwards;
    animation-delay: 7s;
    opacity: 0;
    display: flex;
    font-size: 1.55vw;

    justify-content: center;
}

.introInfo1 {
    animation-delay: 8s;
    padding: 0px 5vw 0px 5vw;
    font-size: 1.3vw;
}



h1 {
    position: relative;
    width: max-content;
    font-size: clamp(1rem, 3vw + 1rem, 4rem);

}

h1::before,
h1::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

h1::before {
    background: var(--bg-color);
    animation: typewriter var(--typewriterSpeed) steps(var(--typewriterCharacters)) 1s forwards;
}

h1::after {
    width: 0.125em;
    background: white;
    animation: typewriter var(--typewriterSpeed) steps(var(--typewriterCharacters)) 1s forwards,
        blink 750ms steps(var(--typewriterCharacters)) infinite;
}

@keyframes typewriter {
    to {
        left: 100%;
    }
}

@keyframes blink {
    to {
        background: transparent;
    }
}

@keyframes fadeInUp {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/*              Extensions              */
.sectionExtension {
    opacity: 0;
    animation: 1s unwrapDetails linear forwards;
    animation-delay: 9s;
}

@keyframes unwrapDetails {
    from {
        transform: translate(0, -30px);
    }

    to {
        opacity: 1;
        transform: translate(0, 0);
    }
}

.sectionInner {
    width: 100%;
    display: grid;
    place-items: center;
}

.sectionInner p {
    font-size: 1.2rem;
    margin: 10px;
    text-align: center;
}

.extensionTitle {
    font-size: 2.5rem !important;
}

.original {
    font-size: 1.5rem !important;
}

.extensionPicture,
.extensionPicture1,
.extensionPicture2 {

    width: 70%;
    position: relative;
}

.extensionPicture:hover:after,
.extensionPicture1:hover:after,
.extensionPicture2:hover:after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    background-image: linear-gradient(to bottom right, rgb(0, 81, 255), red);
    background-size: 200% 200%;
    animation: grad 2s ease forwards;
    padding: 3vw;

    content: "";
    font-size: 1.5rem;
    color: white;
}

.extensionPicture:hover:after {
    content: "Recommended themes: Community Material Theme, Omni Theme, Nord Theme, Synthwave Theme, Kimbie Dark...";
}

.extensionPicture1:hover:after {
    content: "Extensions with same functionallity for different programming languages: Prettier, HTML formatter, JavaScript Formatter. BUT first, configure them in the settings. Click ctrl+, then search for 'Format On Save' and tick the box.";
}

.extensionPicture2:hover:after {
    content: "Taking beautiful screenshots of your Code has never been easier!";
}

@keyframes grad {
    0% {
        background-position: 0 50%;
        opacity: 0;
    }

    25% {
        opacity: 1;
    }

    100% {
        background-position: 100% 50%;
    }
}

img {
    max-width: 100%;
    max-height: 100%;
}

.apply {
    background-color: transparent;
    margin-top: 5px;

    color: white;
    cursor: pointer;

    border: 1px solid;
    border-radius: 3rem;
    font-size: 2rem;
    padding: 0.8rem;
}

.apply:hover {
    border: 1px solid var(--blue);
    background-color: var(--blue);
}

.sectionExtension:nth-of-type(5) {
    margin-top: 70px;
}

.extensionS {
    margin-top: 70px;
    margin-bottom: 70px;

    display: grid;
    grid-template-columns: repeat(4, 8vw);
    column-gap: 5vw;
}

.extensionCard {
    box-shadow: rgba(62, 104, 193, 0.4) -5px 5px, rgba(62, 104, 193, 0.3) -10px 10px, rgba(62, 104, 193, 0.2) -15px 15px, rgba(62, 104, 193, 0.1) -20px 20px, rgba(62, 104, 193, 0.05) -25px 25px;
    border: 1px solid var(--blue);

    height: 8vw;

    border-radius: 10px;
    background-repeat: no-repeat;
    background-size: contain;
    opacity: 0;

    position: relative;
}

.bub {
    position: absolute;
    top: -66px;

    opacity: 0;

    background-color: black;
    border-radius: 4px;
}

.bubcont {
    position: relative;
}

.bubcont div:nth-of-type(2) {
    position: absolute;
    left: 0.7em;

    height: 0;
    width: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid black;
}

.extensionCard:hover .bub {
    opacity: 1;
}

#extensionCard1 {
    animation: cardStack var(--cardspeed) linear forwards;
    animation-delay: 0s;
}

#extensionCard2 {
    animation: cardStack var(--cardspeed) linear forwards;
    animation-delay: var(--delay);
}

#extensionCard3 {
    animation: cardStack var(--cardspeed) linear forwards;
    animation-delay: calc(var(--delay)*2);
}

#extensionCard4 {
    animation: cardStack var(--cardspeed) linear forwards;
    animation-delay: calc(var(--delay)*3);
}

@keyframes cardStack {
    0% {
        transform: translate(-50%, 50%);
        opacity: 0;
    }

    60% {
        opacity: 1;
    }

    100% {
        transform: translate(0, 0);
        opacity: 1;

    }
}

.shidden {
    opacity: 0;
}